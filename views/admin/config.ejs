<div class="container">
  <div class="row">
    <div class="col-12 mb-4">
      <div class="card shadow">
        <div class="card-header bg-primary text-white">
          <h4 class="mb-0">
            <i class="fas fa-cog me-2"></i> Configuración de la Aplicación
          </h4>
        </div>
        <div class="card-body">
          <form action="/admin/config" method="POST" enctype="multipart/form-data">
            <!-- Logo -->
            <div class="mb-4">
              <h5 class="border-bottom pb-2">Logo de la Aplicación</h5>
              <div class="row align-items-center">
                <div class="col-md-6">
                  <div class="mb-3">
                    <label for="logo" class="form-label">Subir nuevo logo</label>
                    <input type="file" class="form-control" id="logo" name="logo" accept="image/*">
                    <small class="text-muted">Tamaño recomendado: 40x40px</small>
                  </div>
                </div>
                <div class="col-md-6">
                  <% if (config.logo && config.logo.url) { %>
                    <div class="text-center">
                      <p class="mb-2">Logo actual:</p>
                      <img src="<%= config.logo.url %>" alt="<%= config.logo.altText %>" 
                           style="max-width: <%= config.logo.width %>px">
                    </div>
                  <% } %>
                </div>
              </div>
            </div>

            <!-- Nombre de la Aplicación -->
            <div class="mb-4">
              <h5 class="border-bottom pb-2">Información General</h5>
              <div class="mb-3">
                <label for="appName" class="form-label">Nombre de la Aplicación</label>
                <input type="text" class="form-control" id="appName" name="appName" 
                       value="<%= config.appName %>" required>
              </div>
            </div>

            <!-- Color Principal -->
            <div class="mb-4">
              <h5 class="border-bottom pb-2">Color Principal</h5>
              <div class="mb-3">
                <label for="primaryColor" class="form-label">Color Principal</label>
                <div class="input-group">
                  <input type="color" class="form-control form-control-color" 
                         id="primaryColor" name="colors[primary]" 
                         value="<%= config.colors.primary %>"
                         onchange="actualizarColorTexto(this.value)">
                  <input type="text" class="form-control" 
                         id="primaryColorText"
                         value="<%= config.colors.primary %>" 
                         pattern="^#[0-9A-Fa-f]{6}$"
                         onchange="actualizarColorPicker(this.value)"
                         required>
                </div>
                <small class="text-muted">Este color se aplicará a los botones, encabezados y elementos principales de la aplicación.</small>
              </div>
            </div>

            <!-- Vista Previa -->
            <div class="mb-4">
              <h5 class="border-bottom pb-2">Vista Previa</h5>
              <div class="preview-section p-3 border rounded">
                <div class="mb-3">
                  <button class="btn btn-primary me-2">Botón Principal</button>
                  <button class="btn btn-outline-primary me-2">Botón Outline</button>
                </div>
                <div class="mb-3">
                  <div class="card d-inline-block" style="width: 200px;">
                    <div class="card-header bg-primary text-white">
                      Encabezado
                    </div>
                    <div class="card-body">
                      <h5 class="card-title text-primary">Ejemplo de Tarjeta</h5>
                      <p class="card-text">Vista previa de estilos</p>
                      <a href="#" class="btn btn-primary btn-sm">Acción</a>
                    </div>
                  </div>
                </div>
                <div class="mb-3">
                  <div class="progress" style="height: 20px;">
                    <div class="progress-bar" role="progressbar" style="width: 75%"></div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Botones de acción -->
            <div class="d-flex justify-content-between">
              <button type="button" class="btn btn-secondary" onclick="resetearConfiguracion()">
                <i class="fas fa-undo me-2"></i> Resetear a Valores por Defecto
              </button>
              <button type="submit" class="btn btn-primary">
                <i class="fas fa-save me-2"></i> Guardar Cambios
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Función para validar formato de color hexadecimal
  function esColorHexValido(color) {
    return /^#[0-9A-Fa-f]{6}$/.test(color);
  }

  // Función para actualizar el input de texto cuando cambia el color picker
  window.actualizarColorTexto = function(color) {
    document.getElementById('primaryColorText').value = color;
    actualizarVistaPrevia(color);
  };

  // Función para actualizar el color picker cuando cambia el input de texto
  window.actualizarColorPicker = function(color) {
    if (esColorHexValido(color)) {
      document.getElementById('primaryColor').value = color;
      actualizarVistaPrevia(color);
    }
  };

  // Función para actualizar la vista previa
  function actualizarVistaPrevia(color) {
    if (!esColorHexValido(color)) return;

    // Convertir color a RGB para efectos de transparencia
    const r = parseInt(color.slice(1,3), 16);
    const g = parseInt(color.slice(3,5), 16);
    const b = parseInt(color.slice(5,7), 16);

    document.documentElement.style.setProperty('--primary-color', color);
    document.documentElement.style.setProperty('--primary-rgb', `${r}, ${g}, ${b}`);

    // Actualizar vista previa inmediatamente
    const previewSection = document.querySelector('.preview-section');
    if (previewSection) {
      previewSection.querySelectorAll('.btn-primary').forEach(btn => {
        btn.style.backgroundColor = color;
        btn.style.borderColor = color;
      });

      previewSection.querySelectorAll('.btn-outline-primary').forEach(btn => {
        btn.style.color = color;
        btn.style.borderColor = color;
      });

      previewSection.querySelectorAll('.bg-primary').forEach(el => {
        el.style.backgroundColor = color;
      });

      previewSection.querySelectorAll('.text-primary').forEach(el => {
        el.style.color = color;
      });

      previewSection.querySelectorAll('.progress-bar').forEach(el => {
        el.style.backgroundColor = color;
      });
    }
  }

  // Inicializar vista previa
  const initialColor = document.getElementById('primaryColor').value;
  if (esColorHexValido(initialColor)) {
    actualizarVistaPrevia(initialColor);
  }

  // Función para resetear la configuración
  window.resetearConfiguracion = function() {
    if (confirm('¿Estás seguro de que deseas resetear toda la configuración a sus valores por defecto?')) {
      location.href = '/admin/config/reset';
    }
  };
});
</script> 